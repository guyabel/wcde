# e <- new.env()
# e$pb <- progress_bar$new(total = nrow(d))
# e$pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# e$pb$terminate()
# pb <<- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# rm(pb, envir = .GlobalEnv)
pb <- NULL
list(
init = function(x, ...) {
pb <<- progress::progress_bar$new(
total = nrow(d0),
format = "(:spin) [:bar] :percent :eta"
)
},
step = function() {
pb$tick()
},
term = function() NULL
)
d$col <- pmap(.l = d, .f = f_one_col, .progress = 'progress')
# pb <- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# return(bind_cols(d$col))
}
f(d = d0)
library(tidyverse)
library(progress)
f_one_col <- function(x, m, s){
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
# pb$tick()
# Sys.sleep(1)
# e$pb$tick()
return(d)
}
f <- function(d){
# e <- new.env()
# e$pb <- progress_bar$new(total = nrow(d))
# e$pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# e$pb$terminate()
# pb <<- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# rm(pb, envir = .GlobalEnv)
# pb <- NULL
# list(
#   init = function(x, ...) {
#     pb <<- progress::progress_bar$new(
#       total = nrow(d0)
#       ,
#       format = "(:spin) [:bar] :percent :eta"
#     )
#   },
#   step = function() {
#     pb$tick()
#   },
#   term = function() NULL
# )
# d$col <- pmap(.l = d, .f = f_one_col, .progress = 'progress')
# pb <- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# return(bind_cols(d$col))
pmap_dfc(.l = d, .f = f_one_col)
}
d0 <- tibble(
x = c("a", "b", "c"),
m = c(10, 20, 30),
s = c(5, 200, 1000)
)
f(d = d0)
?pmap
d0 <- tibble(
xx = c("a", "b", "c"),
m = c(10, 20, 30),
s = c(5, 200, 1000)
)
f(d = d0)
f_one_col()
f_one_col
library(tidyverse)
library(progress)
f_one_col <- function(x, m, s){
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
# pb$tick()
# Sys.sleep(1)
# e$pb$tick()
return(d)
}
f <- function(d){
# e <- new.env()
# e$pb <- progress_bar$new(total = nrow(d))
# e$pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# e$pb$terminate()
# pb <<- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# rm(pb, envir = .GlobalEnv)
# pb <- NULL
# list(
#   init = function(x, ...) {
#     pb <<- progress::progress_bar$new(
#       total = nrow(d0)
#       ,
#       format = "(:spin) [:bar] :percent :eta"
#     )
#   },
#   step = function() {
#     pb$tick()
#   },
#   term = function() NULL
# )
# d$col <- pmap(.l = d, .f = f_one_col, .progress = 'progress')
# pb <- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# return(bind_cols(d$col))
# pmap_dfc(.l = d, .f = f_one_col, .. )
pmap_dfc(.l = list(x = d$xx, m = d$m, s = d$s), .f = f_one_col, .. )
}
d0 <- tibble(
xx = c("a", "b", "c"),
m = c(10, 20, 30),
s = c(5, 200, 1000)
)
f(d = d0)
d0 <- tibble(
x1 = letters,
x2 = letters,
x3 = letters
) %>%
expand(x1, x2, x3) %>%
mutate(
x = paste0(x1, x2, x3),
m = 1:n(),
s = n():1) %>%
select(x, m, s)
f(d = d0) %>%
pivot_longer(cols = 1:ncol(.), names_to = "x", values_to = "y")
library(tidyverse)
library(progress)
f_one_col <- function(x, m, s){
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
# pb$tick()
# Sys.sleep(1)
# e$pb$tick()
return(d)
}
f <- function(d){
# e <- new.env()
# e$pb <- progress_bar$new(total = nrow(d))
# e$pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# e$pb$terminate()
# pb <<- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# rm(pb, envir = .GlobalEnv)
# pb <- NULL
# list(
#   init = function(x, ...) {
#     pb <<- progress::progress_bar$new(
#       total = nrow(d0)
#       ,
#       format = "(:spin) [:bar] :percent :eta"
#     )
#   },
#   step = function() {
#     pb$tick()
#   },
#   term = function() NULL
# )
# d$col <- pmap(.l = d, .f = f_one_col, .progress = 'progress')
# pb <- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# return(bind_cols(d$col))
# pmap_dfc(.l = d, .f = f_one_col)
pmap_dfc(.l = list(x = d$xx, m = d$m, s = d$s), .f = f_one_col)
}
d0 <- tibble(
xx = c("a", "b", "c"),
m = c(10, 20, 30),
s = c(5, 200, 1000)
)
f(d = d0)
install.packages("progressr")
library(progressr)
library(progressr)
xs <- 1:5
with_progress({
p <- progressor(along = xs)
y <- map(xs, function(x) {
p(sprintf("x=%g", x))
Sys.sleep(0.1)
sqrt(x)
})
})
with_progress({
p <- progressor(along = xs)
y <- map(xs, function(x) {
p(sprintf("x=%g", x))
Sys.sleep(0.1)
sqrt(x)
})
})
xs <- 1:50
with_progress({
p <- progressor(along = xs)
y <- map(xs, function(x) {
p(sprintf("x=%g", x))
Sys.sleep(0.1)
sqrt(x)
})
})
library(tidyverse)
library(progress)
library(progressr)
f_one_col <- function(x, m, s){
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
# pb$tick()
# Sys.sleep(1)
# e$pb$tick()
return(d)
}
f <- function(d){
# e <- new.env()
# e$pb <- progress_bar$new(total = nrow(d))
# e$pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# e$pb$terminate()
# pb <<- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# rm(pb, envir = .GlobalEnv)
# pb <- NULL
# list(
#   init = function(x, ...) {
#     pb <<- progress::progress_bar$new(
#       total = nrow(d0)
#       ,
#       format = "(:spin) [:bar] :percent :eta"
#     )
#   },
#   step = function() {
#     pb$tick()
#   },
#   term = function() NULL
# )
# d$col <- pmap(.l = d, .f = f_one_col, .progress = 'progress')
# pb <- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# return(bind_cols(d$col))
# pmap_dfc(.l = d, .f = f_one_col)
# pmap_dfc(.l = list(x = d$xx, m = d$m, s = d$s), .f = f_one_col)
d$n <- 1:nrow(d)
with_progress({
p <- progressor(along = xs)
d0 <- pmap_dfc(
.l = d,
.f = function(n, x, m, s){
p(sprintf("x=%g", n))
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
return(d)
})
})
d0
}
d0 <- tibble(
xx = c("a", "b", "c"),
m = c(10, 20, 30),
s = c(5, 200, 1000)
)
f(d = d0)
d0 <- tibble(
x = c("a", "b", "c"),
m = c(10, 20, 30),
s = c(5, 200, 1000)
)
f(d = d0)
library(tidyverse)
library(progress)
library(progressr)
f_one_col <- function(x, m, s){
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
# pb$tick()
# Sys.sleep(1)
# e$pb$tick()
return(d)
}
f <- function(d){
# e <- new.env()
# e$pb <- progress_bar$new(total = nrow(d))
# e$pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# e$pb$terminate()
# pb <<- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# rm(pb, envir = .GlobalEnv)
# pb <- NULL
# list(
#   init = function(x, ...) {
#     pb <<- progress::progress_bar$new(
#       total = nrow(d0)
#       ,
#       format = "(:spin) [:bar] :percent :eta"
#     )
#   },
#   step = function() {
#     pb$tick()
#   },
#   term = function() NULL
# )
# d$col <- pmap(.l = d, .f = f_one_col, .progress = 'progress')
# pb <- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# return(bind_cols(d$col))
# pmap_dfc(.l = d, .f = f_one_col)
# pmap_dfc(.l = list(x = d$xx, m = d$m, s = d$s), .f = f_one_col)
d$n <- 1:nrow(d)
with_progress({
p <- progressor(along = xs)
d0 <- pmap_dfc(
.l = d,
.f = function(n, x, m, s){
p(sprintf("x=%g", n))
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
Sys.sleep(0.5)
return(d)
})
})
d0
}
d0 <- tibble(
x = c("a", "b", "c"),
m = c(10, 20, 30),
s = c(5, 200, 1000)
)
f(d = d0)
d0 <- tibble(
x = c("a", "b", "v"),
m = c(1000, 20, 30),
s = c(5, 200, 1000)
)
f(d = d0)
f <- function(d){
# e <- new.env()
# e$pb <- progress_bar$new(total = nrow(d))
# e$pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# e$pb$terminate()
# pb <<- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# rm(pb, envir = .GlobalEnv)
# pb <- NULL
# list(
#   init = function(x, ...) {
#     pb <<- progress::progress_bar$new(
#       total = nrow(d0)
#       ,
#       format = "(:spin) [:bar] :percent :eta"
#     )
#   },
#   step = function() {
#     pb$tick()
#   },
#   term = function() NULL
# )
# d$col <- pmap(.l = d, .f = f_one_col, .progress = 'progress')
d$n <- 1:nrow(d)
pb <- progress_bar$new(total = nrow(d))
pb$tick(0)
pmap_dfc(
.l = d,
.f = function(n, x, m, s){
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
pb$tick()
Sys.sleep(0.5)
return(d)
})
)
# pb <- progress_bar$new(total = nrow(d))
# pb$tick(0)
# d$col <- pmap(.l = d, .f = f_one_col)
# pb$terminate()
# return(bind_cols(d$col))
# pmap_dfc(.l = d, .f = f_one_col)
# pmap_dfc(.l = list(x = d$xx, m = d$m, s = d$s), .f = f_one_col)
# d$n <- 1:nrow(d)
# with_progress({
#   p <- progressor(along = xs)
#   d0 <- pmap_dfc(
#     .l = d,
#     .f = function(n, x, m, s){
#       p(sprintf("x=%g", n))
#       d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
#       names(d) <- x
#       Sys.sleep(0.5)
#       return(d)
#     })
#   })
d0
}
f <- function(d){
d$n <- 1:nrow(d)
pb <- progress_bar$new(total = nrow(d))
pb$tick(0)
pmap_dfc(
.l = d,
.f = function(n, x, m, s){
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
pb$tick()
Sys.sleep(0.5)
return(d)
})
)
}
f <- function(d){
d$n <- 1:nrow(d)
pb <- progress_bar$new(total = nrow(d))
pb$tick(0)
pmap_dfc(
.l = d,
.f = function(n, x, m, s){
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
pb$tick()
Sys.sleep(0.5)
return(d)
})
}
d0 <- tibble(
x = c("a", "b", "v"),
m = c(1000, 20, 30),
s = c(5, 200, 1000)
)
f(d = d0)
f <- function(d){
pb <- progress_bar$new(total = nrow(d))
pb$tick(0)
pmap_dfc(
.l = d,
.f = function(x, m, s){
d <- tibble(i = rnorm(n = 5, mean = m, sd = s))
names(d) <- x
pb$tick()
Sys.sleep(0.5)
return(d)
})
}
d0 <- tibble(
x = c("a", "b", "v"),
m = c(1000, 20, 30),
s = c(5, 200, 1000)
)
f(d = d0)
library(wcder)
wcde_pull(measure = "tfr", country_code = "900")
library(wcder)
roxygenise()
library(wcder)
wcde_pull(measure = "tfr", country_code = "900")
roxygenise()
library(wcder)
wcde_pull(measure = "tfr", country_code = "900")
roxygenise()
wcde_pull(measure = "tfr", country_code = "900")
library(wcder)
library(wcder)
wcde_pull(measure = "tfr", country_code = "900")
library(wcder)
wcde_pull(measure = "tfr", country_code = "900")
wcde_pull(measure = "tfr", country_code = c(44, 100, 900))
library(wcder)
wcde_pull(measure = "tfr", country_code = c(44, 100, 900))
library(wcder)
library(wcder)
wcde_pull(measure = "tfr", country_code = c(44, 100, 900))
wcde(measure = "tfr", country_name = c("Austria", "UK"))
roxygenise()
roxygenise()
